pub mod error_codes;
pub use error_codes::LeptonError;

// Autogenerated Bindings
#[allow(non_upper_case_globals)]
#[allow(non_camel_case_types)]
#[allow(non_snake_case)]
#[allow(dead_code)]
#[link(name = "lepton")]
pub mod bindings {
    include!(concat!(env!("OUT_DIR"), "/bindings.rs"));
}

#[cfg(test)]
mod tests {

    #[test]
    fn test_open_port() {
        use super::bindings::*;
        use super::error_codes::LeptonError;

        let port_id   = 1; // 1 for /dev/i2c-1, 0 for /dev/i2c-0
        let port_type = LEP_CAMERA_PORT_E_TAG_LEP_CCI_TWI;
        let baud_rate = 400; // kHz
        let mut port: LEP_CAMERA_PORT_DESC_T = unsafe { std::mem::zeroed() };
        let result: LeptonError;

        unsafe {
            result = LEP_OpenPort(port_id, port_type, baud_rate, &mut port).into();
        }

        println!("{:#?}", port);

        assert_eq!(result, LeptonError::Ok);
    }
}
